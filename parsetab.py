
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftTIMESDIVIDEDIVIDE EQUALS LPAREN MINUS NUMBER PLUS RPAREN SEMICOLON TEXT TIMESexpression : expression PLUS expressionexpression : expression MINUS expressionexpression : termterm : term TIMES termterm : term DIVIDE termterm : NUMBERterm : LPAREN expression RPAREN'
    
_lr_action_items = {'NUMBER':([0,4,5,6,7,8,],[3,3,3,3,3,3,]),'LPAREN':([0,4,5,6,7,8,],[4,4,4,4,4,4,]),'$end':([1,2,3,10,11,12,13,14,],[0,-3,-6,-1,-2,-4,-5,-7,]),'PLUS':([1,2,3,9,10,11,12,13,14,],[5,-3,-6,5,-1,-2,-4,-5,-7,]),'MINUS':([1,2,3,9,10,11,12,13,14,],[6,-3,-6,6,-1,-2,-4,-5,-7,]),'RPAREN':([2,3,9,10,11,12,13,14,],[-3,-6,14,-1,-2,-4,-5,-7,]),'TIMES':([2,3,12,13,14,],[7,-6,-4,-5,-7,]),'DIVIDE':([2,3,12,13,14,],[8,-6,-4,-5,-7,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([0,4,5,6,],[1,9,10,11,]),'term':([0,4,5,6,7,8,],[2,2,2,2,12,13,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expression","S'",1,None,None,None),
  ('expression -> expression PLUS expression','expression',3,'p_e','ply_parser.py',10),
  ('expression -> expression MINUS expression','expression',3,'p_expression_minus','ply_parser.py',15),
  ('expression -> term','expression',1,'p_expression_term','ply_parser.py',20),
  ('term -> term TIMES term','term',3,'p_term_times','ply_parser.py',25),
  ('term -> term DIVIDE term','term',3,'p_term_divide','ply_parser.py',30),
  ('term -> NUMBER','term',1,'p_term_number','ply_parser.py',35),
  ('term -> LPAREN expression RPAREN','term',3,'p_paren','ply_parser.py',40),
]
